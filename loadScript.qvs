///$tab 00_Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';






///$tab 10_Connect
TRACE *** Connect to MIQ data ***;
LIB CONNECT TO 'Common DATA:Machine IQ';
///$tab 15 Device_Assocation
TRACE *** Load iot_things ***;

Devise_Association_History:
SELECT substring(iotv3.iot_things.name, 8, 10) AS esn,
	   iotv3.iot_things.name,
       iotv3.iot_things.created as esn_created,
       iotv3.iot_things.subscription_status,
       iotv3.iot_things.version,
       iotv3.iot_things.data_partition,
       iotv3.iot_things.imei,
       iotv3.iot_things.imsi,
       iotv3.iot_things.iccid,
       iotv3.iot_things.device_management,
       iotv3.iot_things.cellular_protocol,
       iotv3.iot_things.cellular_carrier,
       iotv3.iot_things.device_type,
       iotv3.iot_things.part_number
      -- first_equipment_association.asset_id
      -- first_equipment_association.sample_ts as first_association_ts,   
      -- last_equipment_association.sample_ts as last_association_ts
from iotv3.iot_things;

TRACE  *** Retrieve first and last equipment assocation from iot_messages ***;
temp_equipment_association:
SELECT 
	asset_id, 
    aws_thing_name, 
    min(sample_ts) as first_sample_ts,
    max(sample_ts) as last_sample_ts
FROM iotv3.iot_messages
GROUP BY asset_id, aws_thing_name
;

LEFT JOIN (Devise_Association_History)
LOAD 
  asset_id, 
  aws_thing_name as name, 
  first_sample_ts	AS first_association_ts,
  last_sample_ts	AS last_association_ts
RESIDENT temp_equipment_association
;

drop Tables temp_equipment_association;

///$tab 16_iot_equipement
TRACE *** Load iot_equipment ***;

[iot_equipment]:
LOAD 
	asset_id, 
	servicing_dealer_id, 
	product_category, 
	product_model, 
	product_fault_category, 
	product_equipment_type, 
	test_machine, 
	inventory_condition, 
	last_sync_time,
	inventory_type, 
	customer_account_id;
SELECT 
	"asset_id",
	name,
--	"data_partition",
	"servicing_dealer_id",
	"product_category",
	"product_model",
	"product_fault_category",
	"product_equipment_type",
	"test_machine",
--	created,
--	updated,
--	deleted,
	"inventory_condition",
	"last_sync_time",
--	"sync_retry",
--	"sync_failed",
	"inventory_type",
	"customer_account_id"
FROM iotv3."iot_equipment";


TRACE *** Load iot_equipment status ***;

[iot_equipment_status]:
LOAD 
	asset_id, 
	connected_status,
    health_status,
    service_status,
	"Last_updated" as equipment_last_update_ts
    WHERE Last_updated = updated;
LOAD 
	asset_id,
    connected_status,
    updated,
    health_status,
    service_status,
    Window(Max(updated),asset_id) AS Last_updated ;
SELECT "asset_id",
	"connected_status",
	--created,
	 updated,
	--deleted,
	"health_status",
	"service_status"
FROM iotv3."iot_equipment_status";




///$tab 20_Periodic_Data
TRACE *** Load iot_events on last 7 days ***;

SET v_TimeZone = 'UTC';

[iot_events]:
LOAD 
// 	"esn",
//	"event_id",
// 	"event_type",
	"asset_id",
//     "event_code",
//     "message_id",
//     "attachment_id",
    "sample_ts" ,
	"machine_state_of_charge",
	"machine_battery_voltage",
	"internal_battery_voltage",
//	rssi,
	"data_service_status",
	"fuel_level",
	"cumulative_fuel_consumption",
	"cumulative_engine_hours",
	"def_level";
SELECT 
	"esn",
	--"event_id",
	--"event_type",
	"asset_id",
   -- "event_code",
   -- "message_id",
   -- "attachment_id",
    "sample_ts",
	"machine_state_of_charge",
	"machine_battery_voltage",
	"internal_battery_voltage",
	--rssi,
	"data_service_status",
	"fuel_level",
	"cumulative_fuel_consumption",
	"cumulative_engine_hours",
	"def_level"
FROM iotv3."iot_events_latest"
;
//WHERE "sample_ts" > CURRENT_DATE - INTERVAL '7 DAY' ;





///$tab 30_Equipment_Locations
TRACE *** Load iot_debounced_location_sessions ***;

[iot_debounced_location_sessions]:
LOAD * where "last_update_ts" = last_ts_location;
LOAD *,
	window(max("last_update_ts"), asset_id) AS last_ts_location;
SELECT 
	"location_id",
	"asset_id",
	"start_ts",
	--"start_event_id" ,
	"start_engine_hours",
	"iot_debounced_location_sessions_weekly".latitude,
	"iot_debounced_location_sessions_weekly".longitude,
	"s2_cell_id_12" ,
	--"s2_cell_id_19",
	--"s2_cell_id_20",
	"end_ts",
	--"end_event_id",
	--"end_engine_hours",
	--"session_state",
	"last_update_ts",
	"debounce_distance",
    municipality,
	region,
	"sub_region",
	country
FROM iotv3."iot_debounced_location_sessions_weekly"
INNER JOIN iotv3."iot_addresses" 
ON  "address_id" = "s2_cell_id_12"
;




///$tab 50_Fault_Data
TRACE *** Load iot_fault_sessions (ACTIVE)  ***;

[iot_fault_sessions]:
SELECT 
	"asset_id",
	"fault_code_id",
	status,
	severity,
	"customer_name" as fault_name,
	created as fault_created
FROM iotv3."iot_fault_sessions"
WHERE status = 'ACTIVE';


///$tab 60_Zuora_Subscriptions
LIB CONNECT TO 'Common DATA:Machine IQ Athena';

LOAD subscriptionnumber, 
	package__c AS Package, 
	channel__c AS Channel, 
	version as subscription_version, 
	productid, 
	category__c AS Category, 
	id as subscription_id, 
	subscriptionstartdate, 
	autorenew, 
	customeracctnumber__c, 
	status as zuora_subscription_status, 
	serialnumber__c AS asset_id, 
	subscriptionenddate, 
	currentterm, 
	accountid, 
	accountname as "Account Name", 
	accountbilltoid, 
	accountnumber, 
	amendmenttype, 
	subscriptionupdateddate, 
	subscriptioncreateddate, 
	subscriptionproducttype__c;

[zuora_subscriptions]:
SELECT subscriptionnumber,
	"package__c",
	"channel__c",
	version,
	productid,
	"category__c",
	id,
	subscriptionstartdate,
	autorenew,
	"customeracctnumber__c",
	status,
	"serialnumber__c",
	subscriptionenddate,
	currentterm,
	accountid,
	accountname,
	accountbilltoid,
	accountnumber,
	amendmenttype,
	subscriptionupdateddate,
	subscriptioncreateddate,
	"subscriptionproducttype__c"
FROM AwsDataCatalog.miq."zuora_subscriptions";

STORE zuora_subscriptions INTO [lib://Common DATA:DataFiles/zuora_subscriptions.qvd](qvd);



///$tab 980_Design_Tables
TRACE *** Create static tables ***;

//Static Table to send param to trigger Subroutines in ODAG Template
OdagSectionTable:
LOAD * INLINE [
dataset
RUN_DATA
RUN_USAGE_SUMMARY
PERIODIC_DATA
FAULT_DATA
EQ_LOCATIONS
FULL
];

//Static table to enable time zone selection for TS adjsuted 
TimeZoneTable:
LOAD * INLINE [
TimeZone
UTC
];

//Static table to select historical data for on-demand template app
Predefined_Date_Ranges:
LOAD 
    'Last 7 days' 		AS TimeScope, 
    Date(Today()-7,' YYYY-MM-DD') 	AS "Start_Date",
    Date(Today(), ' YYYY-MM-DD') 	AS "End_Date" 
AutoGenerate 1;

LOAD 
    'Last 30 days' 		AS TimeScope, 
    Date(Today()-30,' YYYY-MM-DD') 	AS "Start_Date",
   Date(Today(), ' YYYY-MM-DD') 			AS "End_Date" 
AutoGenerate 1;

LOAD 
    'Last 14 days' 		AS TimeScope, 
    Date(Today()-14,' YYYY-MM-DD') 	AS "Start_Date",
    Date(Today(), ' YYYY-MM-DD')  			AS "End_Date" 
AutoGenerate 1;

LOAD 
    'Last 90 days' 		AS TimeScope, 
    Date(Today()-90,' YYYY-MM-DD') 	AS "Start_Date",
   Date(Today(), ' YYYY-MM-DD') 			AS "End_Date" 
AutoGenerate 1;

LOAD 
    'Current Month' 				AS TimeScope, 
    Date(MonthStart(Today()),' YYYY-MM-DD') 		AS "Start_Date",
    Date(Today(), ' YYYY-MM-DD') 						AS "End_Date" 
AutoGenerate 1;

LOAD 
    'Current Year' 					AS TimeScope, 
    Date(Makedate(year(Today())),' YYYY-MM-DD') 	AS "Start_Date",
    Date(Today(), ' YYYY-MM-DD')  						AS "End_Date" 
AutoGenerate 1;

LOAD 
    'Last Year' 					AS TimeScope, 
    Date(Makedate(year(Today())-1),' YYYY-MM-DD')	AS "Start_Date",
    Date(Makedate(year(Today())-1, 12, 31),' YYYY-MM-DD') AS "End_Date" 
AutoGenerate 1;




TRACE *** Generate Calendar for date picking (From, To) ***;

CalendarFromTable:
LOAD 
	Date(MakeDate(Year(Today())-1) + RecNo() - 1,' YYYY-MM-DD') AS "Start_Date"
AutoGenerate Today() - MakeDate(Year(Today())-1) + RecNo() + 1;

CalendarToTable:
LOAD 
	Date(MakeDate(Year(Today())-1) + RecNo() - 1,' YYYY-MM-DD') AS "End_Date"
AutoGenerate Today() - MakeDate(Year(Today())-1) + RecNo() + 1;


temp_custom:
NoConcatenate
LOAD *
resident CalendarFromTable;
join (temp_custom)
Load * 
resident CalendarToTable;

// Append dates combinations to allow custom dates range
Concatenate(Predefined_Date_Ranges)
LOAD 'Custom' AS TimeScope, * Resident temp_custom; 
drop Table temp_custom;


///$tab 990_Search
TRACE *** Setup Field list to include in Search ***;

Search Include
	asset_id,
    esn,
    data_partition,
	municipality,
	region,
	sub_region,
	country,
    product_category,
	product_model,
	product_fault_category,
	product_equipment_type,
    inventory_type,
    inventory_condition,
    device_management,
    cellular_protocol,
    cellular_carrier,
    device_type,
    part_number,
    fault_code_id,
    fault_name,
    imei,
    imsi,
    iccid,
    "Account Name",
    Package,
    Channel,
    Category
;

tag fields TimeScope, TimeZone, dataset with '$hidden';
///$tab 999_EXIT
EXIT SCRIPT;